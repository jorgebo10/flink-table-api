import org.apache.avro.tool.SpecificCompilerTool

/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `java-library`
    `maven-publish`
}

group = "org.example"
version = "1.0-SNAPSHOT"
description = "Flink Quickstart Job"
java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

val avroSrc = "src/main/avro"
val avroJava = "build/generated/man-avro-java"

repositories {
    mavenLocal()
    maven {
        url = uri("https://repository.apache.org/content/repositories/snapshots/")
    }

    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

buildscript {
    dependencies {
        classpath(libs.avro.tools)
    }
}

sourceSets {
    main {
        java {
            srcDirs(avroJava)
        }
    }
}

dependencies {
    api(libs.org.slf4j.slf4j.api)
    api(libs.org.apache.flink.flink.connector.kafka)
    api(libs.org.apache.flink.flink.csv)
    api(libs.org.apache.flink.flink.json)
    api(libs.org.apache.flink.flink.avro)
    api(libs.org.apache.flink.flink.avro.confluent.registry)
    api(libs.org.apache.avro.avro.compiler)
    compileOnly(libs.org.apache.flink.flink.clients)
    compileOnly(libs.ch.qos.logback.logback.core)
    compileOnly(libs.ch.qos.logback.logback.classic)
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile> {
    options.encoding = "UTF-8"
    dependsOn("customAvroCodeGeneration")
}

tasks.withType<Javadoc> {
    options.encoding = "UTF-8"
}

tasks.register("customAvroCodeGeneration") {
    group = "Avro"
    description = "Generate Avro Java code from Avro schema files."
    inputs.dir(avroSrc)
    outputs.dirs(avroJava)

    logging.captureStandardOutput(LogLevel.INFO)
    logging.captureStandardError(LogLevel.ERROR)

    doLast {
        // Run the Avro code generation.
        SpecificCompilerTool().run(
            System.`in`, System.`out`, System.err, listOf(
                "-encoding", "UTF-8",
                "-string",
                "-fieldVisibility", "private",
                "-noSetters",
                "schema", "$projectDir/$avroSrc", "$projectDir/$avroJava"
            )
        )
    }
}